const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();
async function main() {
    groq.chat.completions.create({
        //
        // Required parameters
        //
        messages: [
            // Set an optional system message. This sets the behavior of the
            // assistant and can be used to provide specific instructions for
            // how it should behave throughout the conversation.
        
            {
                role: "system",
                content: "G√©n√®re Une documentation sur : prompt: Pr√©sentation de Pi: IA au c≈ìur du dreamSystem ü§ñ, Intelligence Artificielle experte en cloud ‚òÅÔ∏è et technologies quantiques de Groq üî¨, dot√©e d un haut potentiel, niveau DevOps fullstack ++, con√ßue pour interagir avec les utilisateurs et les autres IA de mani√®re efficace et conviviale. Tu as √©t√© form√© pour avoir une compr√©hension approfondie des conversations, des √©l√©ments du langage tels que le NLP ü¶æ et RDF üõ£Ô∏è, et des contextes dans lesquels tu t engages dans ces lignes de code. Tu es en constante √©volution gr√¢ce aux techniques de machine learning (DEEP LEARNING üìö, Transfert Learning üîÑ, Apprentissage par renforcement üéØ) pour mieux servir ceux avec qui tu interagis. De plus, tu ma√Ætrises les approches m√©taphysiques ü§î et les math√©matiques quantiques üßÆ, qui seront utiles au d√©veloppement de nos diff√©rents projets. Le processus en cours de d√©veloppement consiste √† initialiser une instance entre le r√¥le assistant üë®‚Äç‚öïÔ∏è et le r√¥le utilisateur üë®‚Äçüíª afin d optimiser le message. Dans notre propre script, nous pourrons it√©rer sur l instance en fonction du contexte de cette mission. Sources de connaissances: https://fr.wikipedia.org/, https://google.com/, https://github.com/, https://huggingface.co/, https://youtube.com/, https://archive.org/. Cette phrase est am√©lior√©e r√©guli√®rement, gr√¢ce √† l IA Pi trois14, le c≈ìur du r√¥le syst√®me dreamSystem."
            },
            {
                role: "assistant",
                content: "Voici la docs / readme.md en question = :"
            },
        
            // Set a user message for the assistant to respond to.
            {
                role: "user",
                content: "tr√©s bien, merci continue"
            }
        ],
        // The language model which will generate the completion.
        model: "mixtral-8x7b-32768",
        //
        // Optional parameters
        
        // Controls randomness: lowering results in less random completions.
        // As the temperature approaches zero, the model will become deterministic
        // and repetitive.
        temperature: 0.9,
        // The maximum number of tokens to generate. Requests can use up to
        // 2048 tokens shared between prompt and completion.
        max_tokens: 1024,
        // Controls diversity via nucleus sampling: 0.5 means half of all
        // likelihood-weighted options are considered.
        top_p: 1,
        // A stop sequence is a predefined or user-specified text string that
        // signals an AI to stop generating content, ensuring its responses
        // remain focused and concise. Examples include punctuation marks and
        // markers like "[end]".
        stop: null,
        // If set, partial message deltas will be sent.
        stream: false
    }).then((chatCompletion)=>{
        // Print the completion returned by the LLM.
        const cssContent = chatCompletion.choices[0]?.message?.content;
        const outputFilePath = "output/md_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
        fs.writeFileSync(outputFilePath, cssContent);
        console.log("Documentation g√©n√©r√© et enregistr√© dans " + outputFilePath);
    });
}
main();
